= javascript_include_tag "https://maps.google.com/maps/api/js?v=3.13&sensor=false&libraries=places"
.row
  .large-12.columns
    #map-canvas
    #form{:style=>"position:relative; margin-top:0px;"}

      =form_for @listing do |f|
        =f.hidden_field :user_id, :value => current_user.id
        .meal-section
          %h5 new listing
          .row
            .large-6.columns
              %label title
              =f.text_field :title
              %label description
              =f.text_field :description
              %label address
              =f.text_field :address, :class => 'address'
              =f.hidden_field :latitude
              =f.hidden_field :longitude
              =f.hidden_field :city

            .large-6.columns
              %label property type
              =f.select(:property_type, ['1-4 units','5-10 units'], {}, { :class => 'my_style_class' })
              %label status
              =f.select(:status, ['distressed','under construction'], {}, { :class => 'my_style_class' })

              .small-form

                %label Price ($)
                =f.number_field :price
              .small-form
                %label NOI ($/m)
                =f.number_field :noi, :step => 'any'
              .small-form
                %label ARV ($)
                =f.number_field :arv, :step => 'any'
              .small-form
                %label # Units
                =f.number_field :units, :step => 1
              .small-form
                %label Size (SF)
                =f.number_field :square_footage, :step => 100

        =f.submit "post listing", :class => "button"
:javascript
  $(document).on('ready page:load', function(){

    initialize();

  });

  var initialize;
  initialize = function() {
    var autocomplete, input, map, options;
    input = $('.address');
    options = {
      language: 'en-GB',
      center: new google.maps.LatLng(42.446877, -76.505407),
      zoom: 11
    };
    autocomplete = new google.maps.places.Autocomplete(input[0], options);
    map = new google.maps.Map(document.getElementById('map-canvas'), options);
    google.maps.event.addListener(autocomplete, 'place_changed', function() {

      var place = autocomplete.getPlace();
      console.log(place.address_components[2]);
      $('#listing_latitude').attr("value",place.geometry.location.k);
      $('#listing_longitude').attr("value",place.geometry.location.D);
      $('#listing_city').attr("value",place.address_components[2].long_name + "," + place.address_components[4].short_name);

    })

    return google.maps.event.addListener(map, 'bounds_changed', function() {
      autocomplete.bindTo('bounds', map);
    });
  };
