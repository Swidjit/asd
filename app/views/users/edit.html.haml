= javascript_include_tag "https://maps.google.com/maps/api/js?v=3.13&sensor=false&libraries=places"
#map-canvas
.row
  .large-8.columns
    =form_for @user, :url => user_path(@user), :method => :patch do |f|
      =f.label :username
      =f.text_field :username
      =f.label :first_name
      =f.text_field :first_name
      =f.label :last_name
      =f.text_field :last_name
      =f.label :about
      =f.text_area :about
      %label your city
      =f.text_field :address, :class => 'address'
      =f.hidden_field :latitude
      =f.hidden_field :longitude
      %label Who are you?
      =f.select(:dealmaker_list, options_from_collection_for_select(@dealmaker_tags, :name, :name, @user.dealmaker_list), {}, { :class => 'my_style_class' })
      %label Who are you looking to connect with?
      =f.select(:dealmaker_match_list, options_from_collection_for_select(@dealmaker_match_tags, :name, :name, @user.dealmaker_match_list), {}, { :class => 'my_style_class' })
      %label What size deal are you looking for?
      =f.select :deal_size, options_for_select(["","$0-$100K", "$100K-$500K", "$500K-$1MM", "$1MM-$3MM", "$3MM-$10MM", "$10MM +"], @user.deal_size)
      -@purpose_list = ["Buy a property","JV on a deal","Fund my deal","Sell a property","Set a referral","Grow my network", "Finance a deal"]
      %label What is your primary purpose here?
      =f.select :purpose, @purpose_list.map { |value| [ value, value ] }, :include_blank => :true

      =f.label :Market
      =f.text_field :market_list, :data => {:pre => @user.market_list.collect{|tag| {:id => tag, :name => tag}}}
      .large-12.columns
        -@market_tags.each do |t|
          .tag-suggestion{:value => "market"}
            %a= t
      %label Property Type
      =f.select(:property_type, ['','1-4 units','5-10 units','11-20 units', '20+ units','Commercial','Office','Retail','Shopping Center','Condominium', 'Townhouse','Mixed Use','Vacant Lot','Land','Other'], {}, { :class => 'my_style_class' })

      %label Area of Expertise
      =f.text_field :expertise_list, :data => {:pre => @user.expertise_list.collect{|tag| {:id => tag, :name => tag}}}
      .large-12.columns
        -@dealmaker_tags.each do |t|
          .tag-suggestion{:value => "expertise"}
            %a= t
      =f.submit "save"
  .large-4.columns
    #user-photo
    %h4 upload profile pic
    =s3_uploader_form callback_url: upload_file_user_path(@user), remote: :true, callback_param: "user[image_url]", id: "s3-uploader" do
      =file_field_tag :file

    %script#template-upload{:type => "text/x-tmpl"}
      .upload{:id => "file-{%=o.unique_id%}"}
        {%=o.name%}
        .progress
          .bar{:style => "width: 0%"}

:javascript
  $(document).on('ready page:load', function(){

    $("#s3-uploader").S3Uploader();
  });
:javascript
  $(document).on('ready page:load', function(){
    $("#user_market_list").tokenInput(
        "#{autocomplete_market_search_users_path}", {
          preventDuplicates:"true",
          minChars: 2,
          theme: "facebook",
          prePopulate: $("#user_market_list").data("pre"),
          allowFreeTagging: true,
          onAdd: function(item) {
            item.name = item.name.replace("'","");
          }
        }
      );
      $("#user_expertise_list").tokenInput(
        "#{autocomplete_expertise_search_users_path}", {
          preventDuplicates:"true",
          minChars: 2,
          theme: "facebook",
          prePopulate: $("#user_expertise_list").data("pre"),
          allowFreeTagging: false,
          onAdd: function(item) {
            item.name = item.name.replace("'","");
          }
        }
      );

    $(".tag-suggestion a").click(function() {
      var tag_list_selector = "#user_"+$(this).parent().attr("value")+"_list";
      $(tag_list_selector).tokenInput('add', {id: $(this).text(), name: $(this).text()});
      $(this).parent().remove();
      return false
    });

    $("#user_dealmaker_list").on('change', function(e) {
      console.log(this.value);
      $('#user_expertise_list').tokenInput('add', {id: this.value, name: this.value});
    });
  });

:javascript
  $(document).on('ready page:load', function(){

    initialize();

  });

  var initialize;
  initialize = function() {
    var autocomplete, input, map, options;
    input = $('.address');
    options = {
      language: 'en-GB',
      center: new google.maps.LatLng(42.446877, -76.505407),
      zoom: 11
    };
    autocomplete = new google.maps.places.Autocomplete(input[0], options);
    map = new google.maps.Map(document.getElementById('map-canvas'), options);
    google.maps.event.addListener(autocomplete, 'place_changed', function() {
      var place = autocomplete.getPlace();
      console.log(place.geometry.location);
      $('#user_latitude').attr("value",place.geometry.location.k);
      $('#user_longitude').attr("value",place.geometry.location.D);

    });

    return google.maps.event.addListener(map, 'bounds_changed', function() {
      autocomplete.bindTo('bounds', map);
    });
  };