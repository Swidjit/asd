.row
  .large-12.columns
    =form_for @user, :url => user_path(@user), :method => :patch do |f|
      =f.label :username
      =f.text_field :username
      =f.label :first_name
      =f.text_field :first_name
      =f.label :last_name
      =f.text_field :last_name
      =f.label :about
      =f.text_area :about
      =f.label :address
      =f.text_field :address
      =f.label :city
      =f.text_field :city
      =f.label :country
      =f.text_field :county
      =f.label :market
      =f.text_field :market_list, :data => {:pre => @user.market_list.collect{|tag| {:id => tag, :name => tag}}}
      .large-12.columns
        -@market_tags.each do |t|
          .tag-suggestion{:value => "market"}
            %a= t
      =f.label :dealmaker
      =f.text_field :dealmaker_list, :data => {:pre => @user.dealmaker_list.collect{|tag| {:id => tag, :name => tag}}}
      .large-12.columns
        -@dealmaker_tags.each do |t|
          .tag-suggestion{:value => "dealmaker"}
            %a= t
      =f.label :dealmaker_match
      =f.text_field :dealmaker_match_list, :data => {:pre => @user.dealmaker_match_list.collect{|tag| {:id => tag, :name => tag}}}
      .large-12.columns
        - @dealmaker_match_tags.each do |t|
          .tag-suggestion{:value => "dealmaker_match"}
            %a= t
      =f.label :expertise
      =f.text_field :expertise_list, :data => {:pre => @user.expertise_list.collect{|tag| {:id => tag, :name => tag}}}
      .large-12.columns
        -@expertise_tags.each do |t|
          .tag-suggestion{:value => "expertise"}
            %a= t
      =f.submit "save"

:javascript
  $(document).on('ready page:load', function(){
    $("#user_market_list").tokenInput(
        "#{autocomplete_market_search_users_path}", {
          preventDuplicates:"true",
          minChars: 2,
          theme: "facebook",
          prePopulate: $("#user_market_list").data("pre"),
          allowFreeTagging: true,
          onAdd: function(item) {
            item.name = item.name.replace("'","");
          }
        }
      );
      $("#user_expertise_list").tokenInput(
        "#{autocomplete_expertise_search_users_path}", {
          preventDuplicates:"true",
          minChars: 2,
          theme: "facebook",
          prePopulate: $("#user_expertise_list").data("pre"),
          allowFreeTagging: true,
          onAdd: function(item) {
            item.name = item.name.replace("'","");
          }
        }
      );
      $("#user_dealmaker_list").tokenInput(
        "#{autocomplete_dealmaker_search_users_path}", {
          preventDuplicates:"true",
          minChars: 2,
          theme: "facebook",
          prePopulate: $("#user_dealmaker_list").data("pre"),
          allowFreeTagging: true,
          onAdd: function(item) {
            item.name = item.name.replace("'","");
          }
        }
      );
      $("#user_dealmaker_match_list").tokenInput(
        "#{autocomplete_dealmaker_match_search_users_path}", {
          preventDuplicates:"true",
          minChars: 2,
          theme: "facebook",
          prePopulate: $("#user_dealmaker_match_list").data("pre"),
          allowFreeTagging: true,
          onAdd: function(item) {
            item.name = item.name.replace("'","");
          }
        }
      );

    $(".tag-suggestion a").click(function() {
      var tag_list_selector = "#user_"+$(this).parent().attr("value")+"_list";
      $(tag_list_selector).tokenInput('add', {id: $(this).text(), name: $(this).text()});
      $(this).parent().remove();
      return false
    });
  });
