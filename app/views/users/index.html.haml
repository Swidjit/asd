= javascript_include_tag "https://maps.google.com/maps/api/js?v=3.13&sensor=false&libraries=places"

#map-canvas
.row
  .large-8.columns
    %h3 your connections
    #users
      =render @users

  .large-4.columns
    %h4 filter users
    =form_tag(filter_users_path, remote: true, id: 'filter-form', method: 'get') do
      %label property type
      =select_tag :property_type, options_for_select(["","1-4 units", "5 â€“ 10 units", "20+ units", "Commercial", "Office", "Retail", "Shopping Center","Hotel","Mixed-Use", "Vacant Lot", "Land", "Other"]), class: 'filter'
      %label deal size
      =select_tag :deal_size, options_for_select({""=>"0","$0-$100K"=>"1", "$100K - $500K"=>"2", "$500 - $1MM"=>"3", "$1MM - $3MM"=>"4", "$3MM - $10MM"=>"5", "$10MM plus"=>"6"}), class: 'filter'
      %label expertise
      =select_tag :expertise, options_from_collection_for_select(@expertise_tags, :name, :name), class: 'filter'
      %label location
      =text_field_tag :location, "", :id => "user-location"

:javascript

  $(".filter").change(function() {
    $('#filter-form').submit();
  });
  var maxHeight = -1;
  $('.user').each(function() {
     maxHeight = maxHeight > $(this).height() ? maxHeight : $(this).height();
   });

   $('.user').each(function() {
     $(this).height(maxHeight);
   });

  $('.message').on("click", function() {
    $('#user_id').val(this.value);
    $('#message-user').foundation("reveal","open");


  });
:javascript
  $(document).on('ready page:load', function(){

    initialize();

  });

  var initialize;
  initialize = function() {
    var autocomplete, input, map, options;
    input = $('#user-location');
    options = {
      language: 'en-GB',
      center: new google.maps.LatLng(42.446877, -76.505407),
      zoom: 11
    };
    autocomplete = new google.maps.places.Autocomplete(input[0], options);
    map = new google.maps.Map(document.getElementById('map-canvas'), options);
    google.maps.event.addListener(autocomplete, 'place_changed', function() {
      var place = autocomplete.getPlace();
      $('#filter-form').submit();
    });

    return google.maps.event.addListener(map, 'bounds_changed', function() {
      autocomplete.bindTo('bounds', map);
    });
  };